"""
Задание 4.
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса
(метод init()), который должен принимать данные (список списков)
для формирования матрицы.
Подсказка: матрица — система некоторых математических величин,
расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

31 22
37 43
51 86

3 5 32
2 4 6
-1 64 -8

3 5 8 3
8 3 7 1

Следующий шаг — реализовать перегрузку метода str() для вывода матрицы
в привычном виде.
Далее реализовать перегрузку метода add() для реализации операции сложения
двух объектов класса Matrix (двух матриц). Результатом сложения должна быть
новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент
первой строки первой матрицы складываем с первым элементом первой строки
второй матрицы и т.д.
"""


class Matrix:
    """ Создает матрицу"""

    def __init__(self, matrx):
        self.matrix = matrx

    def __str__(self):

        f = ""
        for row in self.matrix:
            f += (' '.join(map(str, row))) + "\n"
        return f

    def __add__(self, other):
        f = ""
        result = [[self.matrix[i][j] + other.matrix[i][j] for j in range
                  (len(self.matrix[0]))] for i in range(len(self.matrix))]

        for row in result:
            f += (' '.join(map(str, row))) + "\n"
        return f


m1 = Matrix([[1, 1, 2], [2, 3, 4], [4, 3, 2]])
m2 = Matrix([[2, 3, 4], [5, 2, 0], [1, 2, 4]])
print(m1)
print(m2)
print(m1 + m2)
